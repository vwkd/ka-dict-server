type Query {
  entry(id: ID!): Entry
  findEntries(value: String!): [Entry]!
}

type Entry {
  id: ID!
  source: Source!
  target: [Target!]!
}

type Source {
  value: String!
  meaning: Int!
}

type Target {
  value: Value!
  meaning: Int!
  tags: [Tag]!
}

union Value = Reference! | Definition!

type Reference {
  id: ID!
  source: Source!
  kind: Kind!
}

enum Kind {
  DIRECT
  MEANING
  IDENTICAL
}

type Definition {
  value: [String!]!
}

enum Tag {
  BIOL
  BOT
  CHEM
  CHEW
  DESP
  ELEKTR
  ETHN
  FIG
  GR
  GUR
  HIST
  HV
  IMER
  ING
  IRO
  JUR
  KACH
  KHAR
  KHIS
  LANDW
  LETSCH
  MATH
  MED
  MIL
  MOCH
  MORAL
  MTHIUL
  MUS
  NEG
  NZ
  O_IMER
  PHOTOGR
  PHYS
  POET
  POL
  PSCH
  RATSCH
  RL
  SPO
  TECH
  THUSCH
  TYP
  U_IMER
  U_RATSCH
  UMG
  UNK
  VA
  VULG
}